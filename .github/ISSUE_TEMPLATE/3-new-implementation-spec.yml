name: "üõ† Development Unit"
description: Implementation-ready unit of work that supports a Feature.
title: "üõ† "
type: "Development Unit"

body:
  - type: markdown
    attributes:
      value: |
        This issue defines an implementation-ready unit of work that supports a Feature.

        You may optionally use an AI tool (e.g. ChatGPT) to help generate the content. If so, a sample prompt is provided below for convenience. Otherwise, just fill out the fields manually.

        ---
        **Optional Prompt for AI Assistance:**

        ```
        You are an AI assistant generating GitHub issues optimized for AI-assisted code changes. Format the output with:

        Title: [Short description of the work]
        Description: [Brief explanation and rationale]
        Requirements: [Numbered list of what needs doing]
        Suggested Changes: [High-level guidance, not exact code]
        Affected Files: [Where the changes will likely occur]
        Acceptance Criteria: [Checklist for completeness]
        Dependencies & Considerations: [Anything else relevant]

        Feature description: Add a dark mode toggle to the settings page.

        Requirements:
        1. Add toggle button.
        2. Store preference.
        3. Apply styles.
        ```

  - type: dropdown
    id: unit-type
    attributes:
      label: Unit Type
      description: "Select the type of development unit this is."
      options:
        - "Functional Addition ‚ûï"
        - "Refactor ‚ôªÔ∏è"
      default: 0

  - type: textarea
    id: description
    attributes:
      label: Description
      description: "Brief explanation of what this unit implements and why it's needed."
      placeholder: |
        Implements a toggle for switching between light and dark mode on the settings page.
        This is part of the broader dark mode feature.

  - type: textarea
    id: requirements
    attributes:
      label: Requirements
      description: "Numbered list of functional and technical requirements."
      placeholder: |
        1. Add toggle button to settings page.
        2. Store preference in local storage.
        3. Apply global styles based on stored preference.
        4. Ensure the toggle is keyboard-accessible.

  - type: textarea
    id: suggested_changes
    attributes:
      label: Suggested Changes
      description: "Guidance on how the change might be implemented. Not strict instructions."
      placeholder: |
        - Modify `SettingsPage.tsx` to add the toggle UI.
        - Use `useEffect` to load the stored preference on page load.
        - Define theme classes in `theme.css`.
        - Avoid using inline styles.

  - type: textarea
    id: affected_files
    attributes:
      label: Affected Files
      description: "List expected files/directories impacted by this change."
      placeholder: |
        - src/components/SettingsPage.tsx
        - src/styles/theme.css
        - src/utils/storage.ts

  - type: textarea
    id: acceptance_criteria
    attributes:
      label: Acceptance Criteria
      description: "Checklist of what must be true for this issue to be considered complete."
      placeholder: |
        - [ ] Toggle UI is visible and functional.
        - [ ] Preference persists across sessions.
        - [ ] Dark mode styles apply to all components.
        - [ ] Toggle is accessible and usable with keyboard/screen reader.
        - [ ] Tested in Chrome, Safari, Firefox.

  - type: textarea
    id: dependencies
    attributes:
      label: Dependencies & Considerations
      description: "Mention any blockers, API dependencies, or related issues."
      placeholder: |
        - Relies on global theme context set in `App.tsx`.
        - Should coordinate with issue #123 for shared theme config.
